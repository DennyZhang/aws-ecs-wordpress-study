server {
    listen web_port_here;
    listen [::]:web_port_here;
    server_name  my_server_name_here;

    index index.php index.html index.htm;
    root /var/www/blog;

    # Pass let's encrypt HTTP-101 challenge
    location ^~ /.well-known/acme-challenge/ {  
             default_type "text/plain";
             allow all;
    }

    location = /favicon.ico {
             log_not_found off;
             access_log off;
    }

    location = /robots.txt {
             allow all;
             log_not_found off;
             access_log off;
    }

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/nginx/error_log;
    access_log /var/log/nginx/access_log;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
                # try_files $uri $uri/ =404;
                try_files $uri $uri/ /index.php?$args;
    }

    # We have copy xmlrpc.php to xmlrpc_denny.php
    location ~ ^/(xmlrpc\.php|wp-cron\.php|inde\.php|mytag_js\.php) {
             deny all;
    }

    # https://www.cyberciti.biz/faq/nginx-block-url-access-all-except-one-ip-address/
    location ~ ^/(wp-admin|wp-login\.php|setup-config\.php) {
             # AWS ELB
             allow 172.31.0.0/16;
             allow 172.30.0.0/16;
             # Denny VPN
             allow 45.33.87.74;
             allow 54.156.174.148;
             deny all;
             include /etc/nginx/fastcgi_params;
             # handle php requests
             fastcgi_read_timeout            3600s;
             fastcgi_buffer_size             128k;
             fastcgi_buffers                 4 128k;
             fastcgi_param                   SCRIPT_FILENAME $document_root$fastcgi_script_name;
             fastcgi_pass                    unix:/run/php/php7.0-fpm.sock;
             fastcgi_index                   index.php;
    }

    # https://gist.github.com/kjprince/9496501
    location ~ \.php$ {
        # Include the fastcgi_params defaults provided by nginx
        include /etc/nginx/fastcgi_params;
        # The amount of time for upstream to wait for a fastcgi process to send data.
        # We keep this *extremely* high so that one can be lazy when remote debugging.

        fastcgi_read_timeout            3600s;
        
         # Buffer size for reading the header of the backend FastCGI process.
        # This defaults to the value of a single fastcgi_buffers, so does not
        # need to be specified in our case, but it's good to be explicit.

        fastcgi_buffer_size             128k;

        # The number and size of the buffers into which the reply from the FastCGI
        # process in the backend is read.
        #
        # 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
        # to disk and replies under 512k are handled directly in memory.

        fastcgi_buffers                 4 128k;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
        # We define it here to be sure that it exists.

        fastcgi_param                   SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Use the upstream for php5-fpm that we defined in nginx.conf

        fastcgi_pass                    unix:/run/php/php7.0-fpm.sock;

        # And get to serving the file!

        fastcgi_index                   index.php;

     }

    #  # Deny access to any files with a .php extension in the uploads directory
    #  # Works in sub-directory installs and also in multisite network
    #  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    #  location ~* /(?:uploads|files)/.*\.php$ {
    #    deny all;
    # }

    # Enable Cache for Static Files
    location ~* \.(?:jpg|jpeg|png|gif|ico|css|js)$ {
       access_log        off;
       log_not_found     off;
       expires 14d;
   }
}

server {
    listen 443 ssl http2; # managed by Certbot
    index index.php index.html index.htm;

    server_name  dennyzhang.com www.dennyzhang.com;
    root /var/www/blog;

    # slack redirection
    rewrite ^/join_slack$ http://slack.dennyzhang.com:3000 permanent;
    location = /favicon.ico {
             log_not_found off;
             access_log off;
    }

    location = /robots.txt {
             allow all;
             log_not_found off;
             access_log off;
    }

    ssl_certificate /etc/letsencrypt/live/dennyzhang.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dennyzhang.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/nginx/ssl_error_log;
    access_log /var/log/nginx/ssl_access_log;

    # https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
    location / {
                # try_files $uri $uri/ =404;
                try_files $uri $uri/ /index.php?$args;
    }

    # We have copy xmlrpc.php to xmlrpc_denny.php
    location ~ ^/(xmlrpc\.php|wp-cron\.php|inde\.php|mytag_js\.php) {
             deny all;
    }

    # https://www.cyberciti.biz/faq/nginx-block-url-access-all-except-one-ip-address/
    location ~ ^/(wp-admin|wp-login\.php|setup-config\.php) {
             # AWS ELB
             allow 172.31.0.0/16;
             allow 172.30.0.0/16;
             # Denny VPN
             allow 45.33.87.74;
             allow 104.237.153.158;
             deny all;
             include /etc/nginx/fastcgi_params;
             # handle php requests
             fastcgi_read_timeout            3600s;
             fastcgi_buffer_size             128k;
             fastcgi_buffers                 4 128k;
             fastcgi_param                   SCRIPT_FILENAME $document_root$fastcgi_script_name;
             fastcgi_pass                    unix:/run/php/php7.0-fpm.sock;
             fastcgi_index                   index.php;
    }

    # https://gist.github.com/kjprince/9496501
    location ~ \.php$ {
        # Include the fastcgi_params defaults provided by nginx
        include /etc/nginx/fastcgi_params;
        # The amount of time for upstream to wait for a fastcgi process to send data.
        # We keep this *extremely* high so that one can be lazy when remote debugging.

        fastcgi_read_timeout            3600s;
        
         # Buffer size for reading the header of the backend FastCGI process.
        # This defaults to the value of a single fastcgi_buffers, so does not
        # need to be specified in our case, but it's good to be explicit.

        fastcgi_buffer_size             128k;

        # The number and size of the buffers into which the reply from the FastCGI
        # process in the backend is read.
        #
        # 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
        # to disk and replies under 512k are handled directly in memory.

        fastcgi_buffers                 4 128k;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
        # We define it here to be sure that it exists.

        fastcgi_param                   SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Use the upstream for php5-fpm that we defined in nginx.conf

        fastcgi_pass                    unix:/run/php/php7.0-fpm.sock;

        # And get to serving the file!

        fastcgi_index                   index.php;

     }

    #  # Deny access to any files with a .php extension in the uploads directory
    #  # Works in sub-directory installs and also in multisite network
    #  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    #  location ~* /(?:uploads|files)/.*\.php$ {
    #    deny all;
    # }

    # Enable Cache for Static Files
    location ~* \.(?:jpg|jpeg|png|gif|ico|css|js)$ {
       access_log        off;
       log_not_found     off;
       expires 14d;
   }
}
